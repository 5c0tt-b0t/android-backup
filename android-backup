#!/bin/bash
#
# Riyad Preukschas <riyad@informatik.uni-bremen.de>
#
# Backs up your Android phone's storage.
# It'll also back up your current TitaniumBackup apps for faster restoration.


# on a running Android /sdcard is symlinked to /storage/emulated/[legacy|0]
# but in TWRP it's directly mounted to /sdcard (so the other dirs aren't there)
readonly ANDROID_STORAGE="/sdcard"
readonly RSYNC_CONFIG="${ANDROID_STORAGE}/.rsyncd.conf"
readonly RSYNC_DEVICE_PORT=1873  # should be above 1024 to be able to bind to without root
readonly RSYNC_LOCAL_PORT=6010

alias adb="adb -d"
adb_package_path() {
  adb shell pm path "$1" | tr -d '\r' | sed "s/^package://"
}
adb_pull() {
  adb pull -p -a "$1" "$2"
}
adb_pull_app() {
  if [[ -z "$(adb_package_path \"$1\")" ]]; then
    echo "Can't find app $1"
    return 1
  else
    rsync_pull "$(adb_package_path \"$1\")" "$2"
  fi
}
adb_rm_dir() {
  adb shell "[[ -d \"$1\" ]] && rm -r \"$1\""
}
rsync_cleanup() {
  adb forward --remove tcp:${RSYNC_LOCAL_PORT}
  adb shell rm -f "${RSYNC_CONFIG}"
}
rsync_pull() {
  # TODO: exclude *.apk, ${ANDROID_STORAGE}/Android/data/*/cache
  rsync --partial --progress --archive --human-readable --prune-empty-dirs --delete "rsync://localhost:6010/root/$1" "$2"
  : rc $?
}
rsync_setup() {
  # from http://blog.josefsson.org/2015/11/28/automatic-android-replicant-backup-over-usb-using-rsync/
  # and http://ptspts.blogspot.de/2015/03/how-to-use-rsync-over-adb-on-android.html
  adb shell "printf \"address = 127.0.0.1\nport = ${RSYNC_DEVICE_PORT}\n\n[root]\npath = /\nuse chroot = false\nread only = true\"" \> "${RSYNC_CONFIG}"
  adb shell rsync --daemon --no-detach --config="${RSYNC_CONFIG}" &  # for debugging --log-file=/proc/self/fd/2
  adb forward tcp:${RSYNC_LOCAL_PORT} tcp:${RSYNC_DEVICE_PORT}
  sleep 2
}


# make sure we get a path to backup stuff into
if [[ -z "$1" ]]; then
  backup_dir_name="./bkp `date '+%Y-%m-%dT%H-%M'`"
  echo "You haven't specified a backup directory."
  read -p "Use '${backup_dir_name}'? [y/n] " yn
  case $yn in
    [Yy]* ) ;;  # just get through
    [Nn]* ) exit;;
    * ) exit 1;;
  esac
  readonly BACKUP_DIR="${backup_dir_name}"
else
  readonly BACKUP_DIR="$1"
fi


# make sure we don't overwrite anything by accident
if [[ -d "${BACKUP_DIR}" ]]; then
  echo "WARNING: '${BACKUP_DIR}' exists already!"
  read -p "Are you sure you want to overwrite files in there? [Yes/No] " yn
  case $yn in
    'Yes'* ) ;;  # just get through
    'No'* ) exit;;
    * ) exit 1;;
  esac
fi


mkdir -p "${BACKUP_DIR}"
cd "${BACKUP_DIR}"


echo "Cleaning up (well-known) caches ..."
adb_rm_dir "${ANDROID_STORAGE}/DCIM/.thumbnails/"
adb_rm_dir "${ANDROID_STORAGE}/Android/data/com.android.providers.media/albumthumbs/"
adb_rm_dir "${ANDROID_STORAGE}/Android/data/com.google.android.youtube/cache/"
adb_rm_dir "${ANDROID_STORAGE}/Android/data/com.owncloud.android/cache/"
adb_rm_dir "${ANDROID_STORAGE}/Android/data/com.tweetlanes.android/cache/"
adb_rm_dir "${ANDROID_STORAGE}/Android/data/org.mariotaku.twidere/cache/"
adb_rm_dir "${ANDROID_STORAGE}/Android/data/org.telegram.messenger/cache/"
adb_rm_dir "${ANDROID_STORAGE}/Android/data/org.videolan.vlc/cache/"
adb_rm_dir "${ANDROID_STORAGE}/Android/data/org.wikipedia/cache/"
adb_rm_dir "${ANDROID_STORAGE}/sdcard/Applidium Image Cache/"
echo "Backing up user data ..."
adb_pull "${ANDROID_STORAGE}/" .
echo "Backing up TitaniumBackup apps ..."
adb_pull_app com.keramidas.TitaniumBackup TitaniumBackup.apk
adb_pull_app com.keramidas.TitaniumBackupPro TitaniumBackupPro.apk
echo "... Done!"
