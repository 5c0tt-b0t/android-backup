#!/bin/bash
#
# Riyad Preukschas <riyad@informatik.uni-bremen.de>
#
# Restores previously backed-up files to your Android phone.
# You still need to restore your apps and config by running TitaniumBackup.


# for easy listing of directory contents starting with '.'
GLOBIGNORE=.:..
# on a running Android /sdcard is symlinked to /storage/emulated/[legacy|0]
# but in TWRP it's directly mounted to /sdcard (so the other dirs aren't there)
readonly ANDROID_STORAGE="/sdcard"
readonly REMOTE_TEMP_DIR="/data/local/tmp"
readonly REMOTE_RSYNC_CONFIG="${REMOTE_TEMP_DIR}/rsync.conf"
readonly REMOTE_RSYNC_PORT=1873  # > 1024 so we don't need to be root
readonly LOCAL_RSYNC_PORT=6010
         REMOTE_RSYNC_BIN="rsync"
readonly REMOTE_TEMP_RSYNC_BIN="${REMOTE_TEMP_DIR}/rsync"
# these are relative to BACKUP_DIR
readonly TB_DIR="TitaniumBackup"
readonly TB_APKS="TitaniumBackup.apk TitaniumBackupPro.apk"
readonly PRIO_DIRS="WhatsApp DCIM Pictures"
readonly SKIP_DIRS="${TB_DIR} ${TB_APKS} ${PRIO_DIRS}"

alias adb="adb -d"
# thanks to http://stackoverflow.com/questions/8063228/how-do-i-check-if-a-variable-exists-in-a-list-in-bash
contains() {
  local list="$1"
  local item="$2"
  [[ ${list} =~ (^|[[:space:]])${item}($|[[:space:]]) ]]
}
adb_install() {
  adb install "$1"
}
adb_push() {
  adb push -p "$1" "${ANDROID_STORAGE}/$1"
}
rsync_cleanup() {
  adb forward --remove tcp:${LOCAL_RSYNC_PORT}
  adb shell rm -f "${REMOTE_RSYNC_CONFIG}"
  if [[ -f "${REMOTE_TEMP_RSYNC_BIN}" ]]; then
    echo "Cleaning up temporary rsync"
    adb shell rm -f "${REMOTE_TEMP_RSYNC_BIN}"
  fi
}
rsync_push() {
  # needs extra --temp-dir option against 'mkstemp "..." (in root) failed: Operation not permitted (1)" errors
  # needs extra --no-times option against 'failed to set times on "..." (in root): Operation not permitted (1)" errors
  rsync --partial --progress --archive --human-readable --delete \
    --filter='H .DS_Store' --temp-dir="${REMOTE_TEMP_DIR}" --no-times \
    "$1" "rsync://localhost:6010/root/$2"
  : rc $?
}
rsync_setup() {
  if [[ -z "$(adb shell which \"${REMOTE_RSYNC_BIN}\")" ]]; then
    echo "Device doesn't have rsync."
    # try different locations for backup rsync
    local SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
    for rsync_src_dir in "${SCRIPT_DIR}" "/usr/local/lib/android-backup"; do
      local RSYNC_SRC="${rsync_src_dir}/rsync.bkp"
      [[ -e "${RSYNC_SRC}" ]] && break
    done
    # have we found a backup rsync?
    if [[ -e "${RSYNC_SRC}" ]]; then
      echo "Providing temporary rsync from ${RSYNC_SRC} ..."
      adb_push "${RSYNC_SRC}" "${REMOTE_TEMP_RSYNC_BIN}"
      adb shell chmod 755 "${REMOTE_TEMP_RSYNC_BIN}"
      REMOTE_RSYNC_BIN="${REMOTE_TEMP_RSYNC_BIN}"
    else
      echo "Can't provide temprorary rsync."
      exit 1
    fi
  fi
  # setup rsync daemon on the device
  # from http://blog.josefsson.org/2015/11/28/automatic-android-replicant-backup-over-usb-using-rsync/
  # and http://ptspts.blogspot.de/2015/03/how-to-use-rsync-over-adb-on-android.html
  adb shell "echo \"address = 127.0.0.1\nport = ${REMOTE_RSYNC_PORT}\n\n[root]\npath = /\nuse chroot = false\nread only = false\"" \> "${REMOTE_RSYNC_CONFIG}"
  adb shell ${REMOTE_RSYNC_BIN} --daemon --no-detach --config="${REMOTE_RSYNC_CONFIG}" &  # for debugging --log-file=/proc/self/fd/2
  # forward a local port to the rsync daemon on the device
  adb forward tcp:${LOCAL_RSYNC_PORT} tcp:${REMOTE_RSYNC_PORT}
  sleep 2
}


# make sure we get a path to restore stuff from
if [[ -z "$1" ]]; then
  echo "Please specify the directory your backups are in!"
  exit 1
else
  readonly BACKUP_DIR="$1"
fi


if [[ ! -d "${BACKUP_DIR}" ]]; then
  echo "'${BACKUP_DIR}' is not a directory."
  exit 1
fi


rsync_setup


echo "Restoring TitaniumBackup data first ..."
if [ ! -d "${BACKUP_DIR}/${TB_DIR}" ]; then
  echo "Can't find TitaniumBackup data directory"
  exit 1
fi
rsync_push "${BACKUP_DIR}/${TB_DIR}/" "${ANDROID_STORAGE}/${TB_DIR}/"


# install TitaniumBackup so we can start restoring stuff on the device itself
echo "Restoring TitaniumBackup apps ..."
for apk in ${TB_APKS}; do
  if [[ -f "${BACKUP_DIR}/${apk}" ]]; then
    adb_install "${BACKUP_DIR}/${apk}"
  else
    echo "Can't find TitaniumBackup app ${apk}."
    exit 1
  fi
done


echo "Restoring some other things with priority ..."
for dir in ${PRIO_DIRS}; do
  [[ ! -d "${BACKUP_DIR}/${dir}" ]] && continue
  rsync_push "${BACKUP_DIR}/${dir}/" "${ANDROID_STORAGE}/${dir}/"
done


echo "Restoring all the rest ..."
for dir in *; do
  if $(contains "${SKIP_DIRS}" "${dir}"); then
    echo "Skipping previously restored '${dir}'"
    continue
  fi
  rsync_push "${BACKUP_DIR}/${dir}/" "${ANDROID_STORAGE}/${dir}/"
done
rsync_cleanup
echo "... Done!"
